name: Build project

on:
  pull_request:
    branches:
      - 'main'
    types: [opened, synchronize, closed]

jobs:
  buildForWindows:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows # Build a Windows standalone.
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          clean: true
      - name: lfs-checkout
        run: |
          git lfs pull
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
      - name: UnityBuild-${{ matrix.targetPlatform }}
        shell: powershell
        run: |
          $UNITY_VERSION = Get-Content '.\ProjectSettings\ProjectVersion.txt' | Where-Object {$_ -match '^m_EditorVersion: .+'} | ForEach-Object {$_ -replace 'm_EditorVersion: (.+)', '$1'}
          if($null -eq $UNITY_VERSION) {
              throw 'Could not detect Unity version'
          }
          $UNITY_EXECUTABLE = "C:\Program Files\Unity\Hub\Editor\${UNITY_VERSION}\Editor\Unity.exe"
          if(!(Test-Path $UNITY_EXECUTABLE)) {
              throw "Could not found Installed Unity version: ${UNITY_VERSION}"
          }
          & $UNITY_EXECUTABLE -quit -batchmode -nographics -executeMethod 'CI.Builder.Build' | Out-Host
          $BUILD_PATH = "Build/${{ matrix.targetPlatform }}"
          $BUILD_PATH | Out-Host
          if(!(Test-Path $BUILD_PATH)) {
              throw 'Artifact not found'
          }
      - uses: actions/upload-artifact@v2
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
